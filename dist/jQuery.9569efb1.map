{"version":3,"sources":["jQuery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","addClass","className","i","length","classList","add","find","selector","array","elements2","from","concat","oldApi","each","fn","call","parent","node","indexOf","parentNode","push","print","console","log","children","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACvC,QAAIC,iBAAJ;AACA;AACA,QAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrCC,mBAAWC,SAASC,gBAAT,CAA0BH,eAA1B,CAAX;AAEH,KAHD,MAGO,IAAIA,2BAA2BI,KAA/B,EAAsC;AACzCH,mBAAWD,eAAX;AAEH;AACD;AACA;AACA,WAAO;AACH;AACAK,gBAFG,oBAEMC,SAFN,EAEiB;AAChB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,SAASO,MAA7B,EAAqCD,GAArC,EAA0C;AACtCN,yBAASM,CAAT,EAAYE,SAAZ,CAAsBC,GAAtB,CAA0BJ,SAA1B;AACH;AACD,mBAAO,IAAP,CALgB,CAKL;AACX;AACH,SATE;;AAUH;AACAK,YAXG,gBAWEC,QAXF,EAWY;AACX,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIN,SAASO,MAA7B,EAAqCD,GAArC,EAA0C;AACtC,oBAAMO,YAAYV,MAAMW,IAAN,CAAWd,SAASM,CAAT,EAAYJ,gBAAZ,CAA6BS,QAA7B,CAAX,CAAlB;AACAC,wBAAQA,MAAMG,MAAN,CAAaF,SAAb,CAAR;AACH;AACDD,kBAAMI,MAAN,GAAe,IAAf,CANW,CAMQ;AACnB,mBAAOlB,OAAOc,KAAP,CAAP;AACA;AACA;AACH,SArBE;;AAsBH;AACAK,YAvBG,gBAuBEC,EAvBF,EAuBM;AACL,iBAAK,IAAIZ,IAAI,CAAb,EAAgBA,IAAIN,SAASO,MAA7B,EAAqCD,GAArC,EAA0C;AACtCY,mBAAGC,IAAH,CAAQ,IAAR,EAAcnB,SAASM,CAAT,CAAd,EAA2BA,CAA3B;AACH;AACD,mBAAO,IAAP;AACH,SA5BE;;AA6BH;AACAc,cA9BG,oBA8BM;AACL,gBAAMR,QAAQ,EAAd;AACA,iBAAKK,IAAL,CAAU,UAACI,IAAD,EAAU;AAChB,oBAAIT,MAAMU,OAAN,CAAcD,KAAKE,UAAnB,MAAmC,CAAC,CAAxC,EAA2C;AACvCX,0BAAMY,IAAN,CAAWH,KAAKE,UAAhB;AACH;AACJ,aAJD;AAKA,mBAAOzB,OAAOc,KAAP,CAAP;AACH,SAtCE;AAuCHa,aAvCG,mBAuCK;AACJC,oBAAQC,GAAR,CAAY3B,QAAZ;AACH,SAzCE;;AA0CH;AACA4B,gBA3CG,sBA2CQ;AACP,gBAAMhB,QAAQ,EAAd;AACA,iBAAKK,IAAL,CAAU,UAACI,IAAD,EAAU;AAChBT,sBAAMY,IAAN,iCAAcH,KAAKO,QAAnB,GADgB,CACY;AAE/B,aAHD;AAIA,mBAAO9B,OAAOc,KAAP,CAAP;AACH,SAlDE;;AAmDH;AACAI,gBAAQjB,gBAAgBiB,MApDrB;;AAsDHa,WAtDG,iBAsDG;AACF,mBAAO,KAAKb,MAAZ,CADE,CACiB;AACtB;AAxDE,KAAP;AA0DA;AAEH,CAxED","file":"jQuery.9569efb1.map","sourceRoot":"..\\src","sourcesContent":["window.jQuery = function (selectorOrArray) {\r\n    let elements\r\n    //通过if语句可以更改elements\r\n    if (typeof selectorOrArray === 'string') {\r\n        elements = document.querySelectorAll(selectorOrArray)\r\n\r\n    } else if (selectorOrArray instanceof Array) {\r\n        elements = selectorOrArray\r\n\r\n    }\r\n    //api可以操作elements\r\n    //const api = {  //自己声明的api 可以直接return\r\n    return {\r\n        //遍历所有获取的元素 并给他们添加名称\r\n        addClass(className) {\r\n            //闭包 函数访问外部的变量\r\n            for (let i = 0; i < elements.length; i++) {\r\n                elements[i].classList.add(className);\r\n            }\r\n            return this//return api就可以实现链式操作\r\n            //this就是api\r\n        },\r\n        //找到指定的元素\r\n        find(selector) {\r\n            let array = []\r\n            for (let i = 0; i < elements.length; i++) {\r\n                const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n                array = array.concat(elements2)\r\n            }\r\n            array.oldApi = this//this就是api\r\n            return jQuery(array)\r\n            //等价于 const newApi=jQuery(array)\r\n            // return newApi\r\n        },\r\n        //遍历当前的元素\r\n        each(fn) {\r\n            for (let i = 0; i < elements.length; i++) {\r\n                fn.call(null, elements[i], i)\r\n            }\r\n            return this\r\n        },\r\n        //获取一个元素的父亲\r\n        parent() {\r\n            const array = []\r\n            this.each((node) => {\r\n                if (array.indexOf(node.parentNode) === -1) {\r\n                    array.push(node.parentNode)\r\n                }\r\n            })\r\n            return jQuery(array)\r\n        },\r\n        print() {\r\n            console.log(elements)\r\n        },\r\n        //获得一个元素的孩子\r\n        children() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(...node.children)//...把node里面的元素拆开 把第一个元素当作第一个参数\r\n\r\n            })\r\n            return jQuery(array)\r\n        },\r\n        //当选中子元素时退回到他的父元素\r\n        oldApi: selectorOrArray.oldApi,\r\n\r\n        end() {\r\n            return this.oldApi //这里的api是api2\r\n        }\r\n    }\r\n    //return api;\r\n\r\n}"]}